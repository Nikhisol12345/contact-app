{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhil solanki\\\\Desktop\\\\contact_management_app-main\\\\contact_management_app\\\\src\\\\Pages\\\\DashboardWithCandlestick.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport WorldMap from \"../Components/WorldMap\";\nimport 'leaflet/dist/leaflet.css';\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardWithCandlestick = () => {\n  _s();\n  const [countriesData, setCountriesData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"https://disease.sh/v3/covid-19/countries\");\n        setCountriesData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchChartData = async () => {\n      try {\n        const response = await axios.get(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\");\n        const data = response.data;\n\n        // Convert the historical data into candlestick format\n        const candlestickData = Object.keys(data.cases).map(date => ({\n          t: new Date(date),\n          o: data.cases[date],\n          h: data.cases[date],\n          // High price, use the same value as \"o\"\n          l: data.cases[date],\n          // Low price, use the same value as \"o\"\n          c: data.cases[date] // Closing price, use the same value as \"o\"\n        }));\n\n        const newChartData = {\n          datasets: [{\n            label: \"Candlestick Chart\",\n            data: candlestickData,\n            borderColor: \"rgba(255, 0, 87, 1)\",\n            borderWidth: 1,\n            fill: true,\n            backgroundColor: \"rgba(255, 0, 87, 0.2)\"\n          }]\n        };\n        setChartData(newChartData);\n      } catch (error) {\n        console.error(\"Error fetching chart data:\", error);\n      }\n    };\n    fetchChartData();\n  }, []);\n  useEffect(() => {\n    if (chartData && chartRef.current) {\n      new Chart(chartRef.current, {\n        type: \"candlestick\",\n        data: {\n          datasets: chartData.datasets\n        },\n        options: {\n          responsive: true,\n          scales: {\n            x: {\n              type: \"time\",\n              time: {\n                unit: \"day\",\n                displayFormats: {\n                  day: \"MMM D\"\n                }\n              },\n              title: {\n                display: true,\n                text: \"Date\"\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: \"Price\"\n              }\n            }\n          }\n        }\n      });\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-200 min-h-screen py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-8 text-pink-600\",\n        children: \"Corona Cases Candlestick Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-4\",\n        children: chartData ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-pink-600 mb-4 font-bold text-2xl\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-8 mt-8 text-blue-500\",\n        children: \"Corona Cases World Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-4\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          className: \"w-full h-96\",\n          bounds: [[-60, -180], [85, 180]],\n          zoom: 2,\n          center: [20, 40],\n          scrollWheelZoom: true,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://stadiamaps.com/\\\">Stadia Maps</a>, \\xA9 <a href=\\\"https://openmaptiles.org/\\\">OpenMapTiles</a> \\xA9 <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WorldMap, {\n            countriesData: countriesData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardWithCandlestick, \"NYw6V+O3KXNcLtotXzhWBlfl0KQ=\");\n_c = DashboardWithCandlestick;\nexport default DashboardWithCandlestick;\nvar _c;\n$RefreshReg$(_c, \"DashboardWithCandlestick\");","map":{"version":3,"names":["axios","React","useEffect","useState","useRef","MapContainer","TileLayer","WorldMap","Chart","jsxDEV","_jsxDEV","DashboardWithCandlestick","_s","countriesData","setCountriesData","chartData","setChartData","chartRef","fetchData","response","get","data","error","console","fetchChartData","candlestickData","Object","keys","cases","map","date","t","Date","o","h","l","c","newChartData","datasets","label","borderColor","borderWidth","fill","backgroundColor","current","type","options","responsive","scales","x","time","unit","displayFormats","day","title","display","text","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","bounds","zoom","center","scrollWheelZoom","url","attribution","_c","$RefreshReg$"],"sources":["C:/Users/nikhil solanki/Desktop/contact_management_app-main/contact_management_app/src/Pages/DashboardWithCandlestick.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport WorldMap from \"../Components/WorldMap\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport Chart from \"chart.js/auto\";\r\n\r\nconst DashboardWithCandlestick = () => {\r\n  const [countriesData, setCountriesData] = useState([]);\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/countries\"\r\n        );\r\n        setCountriesData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchChartData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\"\r\n        );\r\n        const data = response.data;\r\n\r\n        // Convert the historical data into candlestick format\r\n        const candlestickData = Object.keys(data.cases).map((date) => ({\r\n          t: new Date(date),\r\n          o: data.cases[date],\r\n          h: data.cases[date], // High price, use the same value as \"o\"\r\n          l: data.cases[date], // Low price, use the same value as \"o\"\r\n          c: data.cases[date], // Closing price, use the same value as \"o\"\r\n        }));\r\n\r\n        const newChartData = {\r\n          datasets: [\r\n            {\r\n              label: \"Candlestick Chart\",\r\n              data: candlestickData,\r\n              borderColor: \"rgba(255, 0, 87, 1)\",\r\n              borderWidth: 1,\r\n              fill: true,\r\n              backgroundColor: \"rgba(255, 0, 87, 0.2)\",\r\n            },\r\n          ],\r\n        };\r\n        setChartData(newChartData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching chart data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchChartData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartData && chartRef.current) {\r\n      new Chart(chartRef.current, {\r\n        type: \"candlestick\",\r\n        data: {\r\n          datasets: chartData.datasets,\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          scales: {\r\n            x: {\r\n              type: \"time\",\r\n              time: {\r\n                unit: \"day\",\r\n                displayFormats: {\r\n                  day: \"MMM D\",\r\n                },\r\n              },\r\n              title: {\r\n                display: true,\r\n                text: \"Date\",\r\n              },\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: \"Price\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [chartData]);\r\n\r\n  return (\r\n    <div className=\"bg-gray-200 min-h-screen py-8\">\r\n      <div className=\"container mx-auto p-4\">\r\n        <h1 className=\"text-4xl font-bold mb-8 text-pink-600\">\r\n          Corona Cases Candlestick Chart\r\n        </h1>\r\n        <div className=\"bg-white rounded-lg shadow-lg p-4\">\r\n          {chartData ? (\r\n            <canvas ref={chartRef} />\r\n          ) : (\r\n            <h1 className=\"text-pink-600 mb-4 font-bold text-2xl\">Loading...</h1>\r\n          )}\r\n        </div>\r\n\r\n        <h1 className=\"text-4xl font-bold mb-8 mt-8 text-blue-500\">\r\n          Corona Cases World Map\r\n        </h1>\r\n        <div className=\"bg-white rounded-lg shadow-lg p-4\">\r\n          <MapContainer\r\n            className=\"w-full h-96\"\r\n            bounds={[[-60, -180], [85, 180]]}\r\n            zoom={2}\r\n            center={[20, 40]}\r\n            scrollWheelZoom={true}\r\n          >\r\n            <TileLayer\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\r\n            />\r\n            <WorldMap countriesData={countriesData} />\r\n          </MapContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardWithCandlestick;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}