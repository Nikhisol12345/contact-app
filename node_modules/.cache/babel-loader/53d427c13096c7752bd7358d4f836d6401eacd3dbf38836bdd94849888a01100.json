{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhil solanki\\\\Desktop\\\\contact_management_app-main\\\\contact_management_app\\\\src\\\\Pages\\\\Charts_and_Maps.jsx\",\n  _s = $RefreshSig$();\n// import axios from \"axios\";\n\n// import 'leaflet/dist/leaflet.css';\n// import { useEffect, useState } from \"react\";\n// import { Line } from \"react-chartjs-2\";\n\n// import {\n//   CategoryScale,\n//   Chart as ChartJS,\n//   Legend,\n//   LineElement,\n//   LinearScale,\n//   PointElement,\n//   Title,\n//   Tooltip,\n// } from 'chart.js';\n\n// import { MapContainer, TileLayer } from \"react-leaflet\";\n\n// import WorldMap from \"../Components/WorldMap\";\n\n// const Dashboard = () => {\n//   const [countriesData, setCountriesData] = useState([]);\n//   const [chartData, setChartData] = useState({});\n\n//   useEffect(() => {\n//     axios(\n//       \"https://disease.sh/v3/covid-19/countries\"\n//     )\n//       .then((res) => {\n//         const data = res.data\n//         setCountriesData(data);\n//       })\n\n//   }, []);\n\n//   useEffect(() => {\n\n//     axios.get(\n//       \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\"\n//     ).then((res) => {\n\n//       const data = res.data\n\n//       const newChartData = {\n//         labels: Object.keys(data.cases),\n//         datasets: [\n//           {\n//             label: \"Cases\",\n//             data: Object.values(data.cases),\n//             fill: false,\n//             borderColor: \"#f50057\",\n//             tension: 0.2,\n//           },\n//         ],\n//       };\n\n//       setChartData(newChartData);\n//     })\n\n//     ChartJS.register(\n//       CategoryScale,\n//       LinearScale,\n//       PointElement,\n//       LineElement,\n//       Title,\n//       Tooltip,\n//       Legend\n//     );\n\n//   }, []);\n\n//   return (\n//     <div className=\"  w-full pt-20 px-4 pb-8\" >\n//       <h1 className=\"text-4xl font-bold mb-4 text-pink-600\">Corona Cases Chart</h1>\n//       <div className=\"border-2 border-red-100 w-11/12  m-auto 10 auto 10\" >\n\n//         {\n//           chartData.datasets ?\n//             <Line data={chartData} /> : <h1 className=\"text-pink-600 mb-4 font-bold text-2xl\">Loading...</h1>\n//         }\n\n//       </div>\n\n//       <h1 className=\"text-4xl font-bold mb-4 mt-4 text-blue-500\">Corona Cases World Map</h1>\n//       <div\n//         className=\"border-2 border-blue-500 w-11/12  m-auto 5 auto 5\"\n\n//       >\n//         <MapContainer\n\n//           className=\"m-auto w-full  border-blue-700\"\n//           bounds={[[-60, -180], [85, 180]]} zoom={2}\n//           center={[20, 40]}\n//           scrollWheelZoom={true}\n\n//         >\n\n//           <TileLayer\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//             attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n//           />\n\n//           <WorldMap countriesData={countriesData} />\n\n//         </MapContainer>\n\n//       </div>\n\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport WorldMap from \"../Components/WorldMap\";\nimport 'leaflet/dist/leaflet.css';\nimport { Candlestick } from 'react-chartjs-2'; // Import the Candlestick chart type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [countriesData, setCountriesData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"https://disease.sh/v3/covid-19/countries\");\n        setCountriesData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchChartData = async () => {\n      try {\n        const response = await axios.get(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\");\n        const data = response.data;\n\n        // Convert the historical data into candlestick format\n        const candlestickData = Object.keys(data.cases).map(date => ({\n          t: new Date(date),\n          o: data.cases[date],\n          h: data.cases[date],\n          // High price, use the same value as \"o\"\n          l: data.cases[date],\n          // Low price, use the same value as \"o\"\n          c: data.cases[date] // Closing price, use the same value as \"o\"\n        }));\n\n        const newChartData = {\n          datasets: [{\n            label: \"Candlestick Chart\",\n            data: candlestickData,\n            borderColor: \"#f50057\",\n            borderWidth: 1\n          }]\n        };\n        setChartData(newChartData);\n      } catch (error) {\n        console.error(\"Error fetching chart data:\", error);\n      }\n    };\n    fetchChartData();\n  }, []);\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM D'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Cases'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-200 min-h-screen py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-8 text-pink-600\",\n        children: \"Corona Cases Candlestick Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-4\",\n        children: chartData ? /*#__PURE__*/_jsxDEV(Candlestick, {\n          data: chartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-pink-600 mb-4 font-bold text-2xl\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-8 mt-8 text-blue-500\",\n        children: \"Corona Cases World Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-4\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          className: \"w-full h-96\",\n          bounds: [[-60, -180], [85, 180]],\n          zoom: 2,\n          center: [20, 40],\n          scrollWheelZoom: true,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://stadiamaps.com/\\\">Stadia Maps</a>, \\xA9 <a href=\\\"https://openmaptiles.org/\\\">OpenMapTiles</a> \\xA9 <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WorldMap, {\n            countriesData: countriesData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"7LI4JSbw8z+qH/TbFZfTf8Plnzc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["axios","React","useEffect","useState","MapContainer","TileLayer","WorldMap","Candlestick","jsxDEV","_jsxDEV","Dashboard","_s","countriesData","setCountriesData","chartData","setChartData","fetchData","response","get","data","error","console","fetchChartData","candlestickData","Object","keys","cases","map","date","t","Date","o","h","l","c","newChartData","datasets","label","borderColor","borderWidth","chartOptions","responsive","scales","x","type","time","unit","displayFormats","day","title","display","text","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","bounds","zoom","center","scrollWheelZoom","url","attribution","_c","$RefreshReg$"],"sources":["C:/Users/nikhil solanki/Desktop/contact_management_app-main/contact_management_app/src/Pages/Charts_and_Maps.jsx"],"sourcesContent":["// import axios from \"axios\";\n\n// import 'leaflet/dist/leaflet.css';\n// import { useEffect, useState } from \"react\";\n// import { Line } from \"react-chartjs-2\";\n\n\n// import {\n//   CategoryScale,\n//   Chart as ChartJS,\n//   Legend,\n//   LineElement,\n//   LinearScale,\n//   PointElement,\n//   Title,\n//   Tooltip,\n// } from 'chart.js';\n\n\n\n// import { MapContainer, TileLayer } from \"react-leaflet\";\n\n// import WorldMap from \"../Components/WorldMap\";\n\n\n\n\n\n// const Dashboard = () => {\n//   const [countriesData, setCountriesData] = useState([]);\n//   const [chartData, setChartData] = useState({});\n\n\n\n//   useEffect(() => {\n//     axios(\n//       \"https://disease.sh/v3/covid-19/countries\"\n//     )\n//       .then((res) => {\n//         const data = res.data\n//         setCountriesData(data);\n//       })\n\n\n//   }, []);\n\n//   useEffect(() => {\n\n\n//     axios.get(\n//       \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\"\n//     ).then((res) => {\n\n//       const data = res.data\n\n//       const newChartData = {\n//         labels: Object.keys(data.cases),\n//         datasets: [\n//           {\n//             label: \"Cases\",\n//             data: Object.values(data.cases),\n//             fill: false,\n//             borderColor: \"#f50057\",\n//             tension: 0.2,\n//           },\n//         ],\n//       };\n\n//       setChartData(newChartData);\n//     })\n\n\n//     ChartJS.register(\n//       CategoryScale,\n//       LinearScale,\n//       PointElement,\n//       LineElement,\n//       Title,\n//       Tooltip,\n//       Legend\n//     );\n\n//   }, []);\n\n\n//   return (\n//     <div className=\"  w-full pt-20 px-4 pb-8\" >\n//       <h1 className=\"text-4xl font-bold mb-4 text-pink-600\">Corona Cases Chart</h1>\n//       <div className=\"border-2 border-red-100 w-11/12  m-auto 10 auto 10\" >\n\n//         {\n//           chartData.datasets ?\n//             <Line data={chartData} /> : <h1 className=\"text-pink-600 mb-4 font-bold text-2xl\">Loading...</h1>\n//         }\n\n\n\n\n//       </div>\n\n\n//       <h1 className=\"text-4xl font-bold mb-4 mt-4 text-blue-500\">Corona Cases World Map</h1>\n//       <div\n//         className=\"border-2 border-blue-500 w-11/12  m-auto 5 auto 5\"\n\n//       >\n//         <MapContainer\n\n//           className=\"m-auto w-full  border-blue-700\"\n//           bounds={[[-60, -180], [85, 180]]} zoom={2}\n//           center={[20, 40]}\n//           scrollWheelZoom={true}\n\n//         >\n\n//           <TileLayer\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//             attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n//           />\n\n\n\n\n//           <WorldMap countriesData={countriesData} />\n\n//         </MapContainer>\n\n\n\n\n//       </div>\n\n\n\n\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport WorldMap from \"../Components/WorldMap\";\nimport 'leaflet/dist/leaflet.css';\nimport { Candlestick } from 'react-chartjs-2'; // Import the Candlestick chart type\n\nconst Dashboard = () => {\n  const [countriesData, setCountriesData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          \"https://disease.sh/v3/covid-19/countries\"\n        );\n        setCountriesData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const fetchChartData = async () => {\n      try {\n        const response = await axios.get(\n          \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\"\n        );\n        const data = response.data;\n\n        // Convert the historical data into candlestick format\n        const candlestickData = Object.keys(data.cases).map((date) => ({\n          t: new Date(date),\n          o: data.cases[date],\n          h: data.cases[date], // High price, use the same value as \"o\"\n          l: data.cases[date], // Low price, use the same value as \"o\"\n          c: data.cases[date], // Closing price, use the same value as \"o\"\n        }));\n\n        const newChartData = {\n          datasets: [\n            {\n              label: \"Candlestick Chart\",\n              data: candlestickData,\n              borderColor: \"#f50057\",\n              borderWidth: 1,\n            },\n          ],\n        };\n        setChartData(newChartData);\n      } catch (error) {\n        console.error(\"Error fetching chart data:\", error);\n      }\n    };\n\n    fetchChartData();\n  }, []);\n\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM D',\n          },\n        },\n        title: {\n          display: true,\n          text: 'Date',\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Cases',\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"bg-gray-200 min-h-screen py-8\">\n      <div className=\"container mx-auto p-4\">\n        <h1 className=\"text-4xl font-bold mb-8 text-pink-600\">Corona Cases Candlestick Chart</h1>\n        <div className=\"bg-white rounded-lg shadow-lg p-4\">\n          {chartData ? (\n            <Candlestick data={chartData} options={chartOptions} />\n          ) : (\n            <h1 className=\"text-pink-600 mb-4 font-bold text-2xl\">Loading...</h1>\n          )}\n        </div>\n\n        <h1 className=\"text-4xl font-bold mb-8 mt-8 text-blue-500\">Corona Cases World Map</h1>\n        <div className=\"bg-white rounded-lg shadow-lg p-4\">\n          <MapContainer\n            className=\"w-full h-96\"\n            bounds={[[-60, -180], [85, 180]]}\n            zoom={2}\n            center={[20, 40]}\n            scrollWheelZoom={true}\n          >\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n            />\n            <WorldMap countriesData={countriesData} />\n          </MapContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;;AAMA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAKA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAKA;;AAEA;;AAKA;;AAKA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,QAAQ,eAAe;AACvD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAO,0BAA0B;AACjC,SAASC,WAAW,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAC9B,0CAA0C,CAC3C;QACDL,gBAAgB,CAACI,QAAQ,CAACE,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDJ,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACd,MAAMoB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAML,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAC9B,4DAA4D,CAC7D;QACD,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI;;QAE1B;QACA,MAAMI,eAAe,GAAGC,MAAM,CAACC,IAAI,CAACN,IAAI,CAACO,KAAK,CAAC,CAACC,GAAG,CAAEC,IAAI,KAAM;UAC7DC,CAAC,EAAE,IAAIC,IAAI,CAACF,IAAI,CAAC;UACjBG,CAAC,EAAEZ,IAAI,CAACO,KAAK,CAACE,IAAI,CAAC;UACnBI,CAAC,EAAEb,IAAI,CAACO,KAAK,CAACE,IAAI,CAAC;UAAE;UACrBK,CAAC,EAAEd,IAAI,CAACO,KAAK,CAACE,IAAI,CAAC;UAAE;UACrBM,CAAC,EAAEf,IAAI,CAACO,KAAK,CAACE,IAAI,CAAC,CAAE;QACvB,CAAC,CAAC,CAAC;;QAEH,MAAMO,YAAY,GAAG;UACnBC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,mBAAmB;YAC1BlB,IAAI,EAAEI,eAAe;YACrBe,WAAW,EAAE,SAAS;YACtBC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC;QACDxB,YAAY,CAACoB,YAAY,CAAC;MAC5B,CAAC,CAAC,OAAOf,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDE,cAAc,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,IAAI,EAAE,KAAK;UACXC,cAAc,EAAE;YACdC,GAAG,EAAE;UACP;QACF,CAAC;QACDC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,CAAC,EAAE;QACDH,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,oBACE1C,OAAA;IAAK4C,SAAS,EAAC,+BAA+B;IAAAC,QAAA,eAC5C7C,OAAA;MAAK4C,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpC7C,OAAA;QAAI4C,SAAS,EAAC,uCAAuC;QAAAC,QAAA,EAAC;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACzFjD,OAAA;QAAK4C,SAAS,EAAC,mCAAmC;QAAAC,QAAA,EAC/CxC,SAAS,gBACRL,OAAA,CAACF,WAAW;UAACY,IAAI,EAAEL,SAAU;UAAC6C,OAAO,EAAEnB;QAAa;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,gBAEvDjD,OAAA;UAAI4C,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACjE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACG,eAENjD,OAAA;QAAI4C,SAAS,EAAC,4CAA4C;QAAAC,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACtFjD,OAAA;QAAK4C,SAAS,EAAC,mCAAmC;QAAAC,QAAA,eAChD7C,OAAA,CAACL,YAAY;UACXiD,SAAS,EAAC,aAAa;UACvBO,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAE;UACjCC,IAAI,EAAE,CAAE;UACRC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;UACjBC,eAAe,EAAE,IAAK;UAAAT,QAAA,gBAEtB7C,OAAA,CAACJ,SAAS;YACR2D,GAAG,EAAC,oDAAoD;YACxDC,WAAW,EAAC;UAAgM;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC5M,eACFjD,OAAA,CAACH,QAAQ;YAACM,aAAa,EAAEA;UAAc;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC7B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACX;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAC/C,EAAA,CA/GID,SAAS;AAAAwD,EAAA,GAATxD,SAAS;AAiHf,eAAeA,SAAS;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}