{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhil solanki\\\\Desktop\\\\contact_management_app-main\\\\contact_management_app\\\\src\\\\Pages\\\\Charts_and_Maps.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\"; // Import Bar from react-chartjs-2\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport WorldMap from \"../Components/WorldMap\";\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [countriesData, setCountriesData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"https://disease.sh/v3/covid-19/countries\");\n        setCountriesData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchChartData = async () => {\n      try {\n        const response = await axios.get(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\");\n        const data = response.data;\n        const newChartData = {\n          labels: Object.keys(data.cases),\n          // Assuming these are category labels\n          datasets: [{\n            label: \"Cases\",\n            data: Object.values(data.cases),\n            // Numeric values\n            backgroundColor: \"#f50057\",\n            // Change color for bars\n            borderWidth: 1\n          }]\n        };\n\n        // Assuming \"chartRef\" is your chart reference\n        const chartRef = chartRef.current;\n        if (chartRef) {\n          new Chart(chartRef, {\n            type: \"bar\",\n            // Set the chart type to \"bar\"\n            data: newChartData,\n            options: {\n              scales: {\n                x: {\n                  type: \"category\" // Use \"category\" for x-axis (labels)\n                },\n\n                y: {\n                  type: \"linear\" // Use \"linear\" for y-axis (numeric values)\n                }\n              }\n            }\n          });\n        }\n\n        setChartData(newChartData);\n      } catch (error) {\n        console.error(\"Error fetching chart data:\", error);\n      }\n    };\n    fetchChartData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full pt-20 px-4 pb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-4 text-pink-600\",\n      children: \"Corona Cases Bar Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 border-red-100 w-11/12 m-auto 10 auto 10\",\n      children: chartData ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-pink-600 mb-4 font-bold text-2xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-4 mt-4 text-blue-500\",\n      children: \"Corona Cases World Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 border-blue-500 w-11/12 m-auto 5 auto 5\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        className: \"m-auto w-full border-blue-700\",\n        bounds: [[-60, -180], [85, 180]],\n        zoom: 2,\n        center: [20, 40],\n        scrollWheelZoom: true,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://stadiamaps.com/\\\">Stadia Maps</a>, \\xA9 <a href=\\\"https://openmaptiles.org/\\\">OpenMapTiles</a> \\xA9 <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WorldMap, {\n          countriesData: countriesData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"7LI4JSbw8z+qH/TbFZfTf8Plnzc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["axios","React","useEffect","useState","Bar","MapContainer","TileLayer","WorldMap","jsxDEV","_jsxDEV","Dashboard","_s","countriesData","setCountriesData","chartData","setChartData","fetchData","response","get","data","error","console","fetchChartData","newChartData","labels","Object","keys","cases","datasets","label","values","backgroundColor","borderWidth","chartRef","current","Chart","type","options","scales","x","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","bounds","zoom","center","scrollWheelZoom","url","attribution","_c","$RefreshReg$"],"sources":["C:/Users/nikhil solanki/Desktop/contact_management_app-main/contact_management_app/src/Pages/Charts_and_Maps.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\"; // Import Bar from react-chartjs-2\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport WorldMap from \"../Components/WorldMap\";\nimport 'leaflet/dist/leaflet.css';\n\nconst Dashboard = () => {\n  const [countriesData, setCountriesData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          \"https://disease.sh/v3/covid-19/countries\"\n        );\n        setCountriesData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const fetchChartData = async () => {\n      try {\n        const response = await axios.get(\n          \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\"\n        );\n        const data = response.data;\n        const newChartData = {\n          labels: Object.keys(data.cases), // Assuming these are category labels\n          datasets: [\n            {\n              label: \"Cases\",\n              data: Object.values(data.cases), // Numeric values\n              backgroundColor: \"#f50057\", // Change color for bars\n              borderWidth: 1,\n            },\n          ],\n        };\n        \n        // Assuming \"chartRef\" is your chart reference\n        const chartRef = chartRef.current;\n        if (chartRef) {\n          new Chart(chartRef, {\n            type: \"bar\", // Set the chart type to \"bar\"\n            data: newChartData,\n            options: {\n              scales: {\n                x: {\n                  type: \"category\", // Use \"category\" for x-axis (labels)\n                },\n                y: {\n                  type: \"linear\", // Use \"linear\" for y-axis (numeric values)\n                },\n              },\n            },\n          });\n        }\n        \n        setChartData(newChartData);\n      } catch (error) {\n        console.error(\"Error fetching chart data:\", error);\n      }\n    };\n\n    fetchChartData();\n  }, []);\n\n  return (\n    <div className=\"w-full pt-20 px-4 pb-8\">\n      <h1 className=\"text-4xl font-bold mb-4 text-pink-600\">Corona Cases Bar Chart</h1>\n      <div className=\"border-2 border-red-100 w-11/12 m-auto 10 auto 10\">\n        {chartData ? (\n          <Bar data={chartData} /> ) : (\n          <h1 className=\"text-pink-600 mb-4 font-bold text-2xl\">Loading...</h1>\n        )}\n      </div>\n\n      <h1 className=\"text-4xl font-bold mb-4 mt-4 text-blue-500\">Corona Cases World Map</h1>\n      <div className=\"border-2 border-blue-500 w-11/12 m-auto 5 auto 5\">\n        <MapContainer\n          className=\"m-auto w-full border-blue-700\"\n          bounds={[[-60, -180], [85, 180]]}\n          zoom={2}\n          center={[20, 40]}\n          scrollWheelZoom={true}\n        >\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n          />\n          <WorldMap countriesData={countriesData} />\n        </MapContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}