{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhil solanki\\\\Desktop\\\\contact_management_app-main\\\\contact_management_app\\\\src\\\\Pages\\\\Charts_and_Maps.jsx\",\n  _s = $RefreshSig$();\n// import axios from \"axios\";\nimport CandlestickChart from \"./CandlestickChart\"; // import 'leaflet/dist/leaflet.css';\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { CategoryScale, Chart as ChartJS, Legend, LineElement, LinearScale, PointElement, Title, Tooltip } from 'chart.js';\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport WorldMap from \"../Components/WorldMap\";\n\n// const Dashboard = () => {\n//   const [countriesData, setCountriesData] = useState([]);\n//   const [chartData, setChartData] = useState({});\n\n//   useEffect(() => {\n//     axios(\n//       \"https://disease.sh/v3/covid-19/countries\"\n//     )\n//       .then((res) => {\n//         const data = res.data\n//         setCountriesData(data);\n//       })\n\n//   }, []);\n\n//   useEffect(() => {\n\n//     axios.get(\n//       \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\"\n//     ).then((res) => {\n\n//       const data = res.data\n\n//       const newChartData = {\n//         labels: Object.keys(data.cases),\n//         datasets: [\n//           {\n//             label: \"Cases\",\n//             data: Object.values(data.cases),\n//             fill: false,\n//             borderColor: \"#f50057\",\n//             tension: 0.2,\n//           },\n//         ],\n//       };\n\n//       setChartData(newChartData);\n//     })\n\n//     ChartJS.register(\n//       CategoryScale,\n//       LinearScale,\n//       PointElement,\n//       LineElement,\n//       Title,\n//       Tooltip,\n//       Legend\n//     );\n\n//   }, []);\n\n//   return (\n//     <div className=\"  w-full pt-20 px-4 pb-8\" >\n//       <h1 className=\"text-4xl font-bold mb-4 text-pink-600\">Corona Cases Chart</h1>\n//       <div className=\"border-2 border-red-100 w-11/12  m-auto 10 auto 10\" >\n\n//         {\n//           chartData.datasets ?\n//             <Line data={chartData} /> : <h1 className=\"text-pink-600 mb-4 font-bold text-2xl\">Loading...</h1>\n//         }\n\n//       </div>\n\n//       <h1 className=\"text-4xl font-bold mb-4 mt-4 text-blue-500\">Corona Cases World Map</h1>\n//       <div\n//         className=\"border-2 border-blue-500 w-11/12  m-auto 5 auto 5\"\n\n//       >\n//         <MapContainer\n\n//           className=\"m-auto w-full  border-blue-700\"\n//           bounds={[[-60, -180], [85, 180]]} zoom={2}\n//           center={[20, 40]}\n//           scrollWheelZoom={true}\n\n//         >\n\n//           <TileLayer\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//             attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n//           />\n\n//           <WorldMap countriesData={countriesData} />\n\n//         </MapContainer>\n\n//       </div>\n\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n// ... imports ...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [countriesData, setCountriesData] = useState([]);\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    axios(\"https://disease.sh/v3/covid-19/countries\").then(res => {\n      const data = res.data;\n      setCountriesData(data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\").then(res => {\n      const data = res.data;\n      const newChartData = {\n        labels: Object.keys(data.cases),\n        datasets: [{\n          label: \"Cases\",\n          data: Object.values(data.cases),\n          fill: false,\n          borderColor: \"#f50057\",\n          tension: 0.2\n        }]\n      };\n      setChartData(newChartData);\n    });\n    ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-200 min-h-screen py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-8 text-pink-600\",\n        children: \"Corona Cases Candlestick Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-4\",\n        children: chartData ? /*#__PURE__*/_jsxDEV(CandlestickChart, {\n          data: chartData.datasets[0].data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-pink-600 mb-4 font-bold text-2xl\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"kMvp+kKJWOeVrNrAN37nOI1/Efg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["CandlestickChart","useEffect","useState","Line","CategoryScale","Chart","ChartJS","Legend","LineElement","LinearScale","PointElement","Title","Tooltip","MapContainer","TileLayer","WorldMap","jsxDEV","_jsxDEV","Dashboard","_s","countriesData","setCountriesData","chartData","setChartData","axios","then","res","data","get","newChartData","labels","Object","keys","cases","datasets","label","values","fill","borderColor","tension","register","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nikhil solanki/Desktop/contact_management_app-main/contact_management_app/src/Pages/Charts_and_Maps.jsx"],"sourcesContent":["// import axios from \"axios\";\nimport CandlestickChart from \"./CandlestickChart\"// import 'leaflet/dist/leaflet.css';\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\n\nimport {\n  CategoryScale,\n  Chart as ChartJS,\n  Legend,\n  LineElement,\n  LinearScale,\n  PointElement,\n  Title,\n  Tooltip,\n} from 'chart.js';\n\n\n\nimport { MapContainer, TileLayer } from \"react-leaflet\";\n\nimport WorldMap from \"../Components/WorldMap\";\n\n\n\n\n\n// const Dashboard = () => {\n//   const [countriesData, setCountriesData] = useState([]);\n//   const [chartData, setChartData] = useState({});\n\n\n\n//   useEffect(() => {\n//     axios(\n//       \"https://disease.sh/v3/covid-19/countries\"\n//     )\n//       .then((res) => {\n//         const data = res.data\n//         setCountriesData(data);\n//       })\n\n\n//   }, []);\n\n//   useEffect(() => {\n\n\n//     axios.get(\n//       \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\"\n//     ).then((res) => {\n\n//       const data = res.data\n\n//       const newChartData = {\n//         labels: Object.keys(data.cases),\n//         datasets: [\n//           {\n//             label: \"Cases\",\n//             data: Object.values(data.cases),\n//             fill: false,\n//             borderColor: \"#f50057\",\n//             tension: 0.2,\n//           },\n//         ],\n//       };\n\n//       setChartData(newChartData);\n//     })\n\n\n//     ChartJS.register(\n//       CategoryScale,\n//       LinearScale,\n//       PointElement,\n//       LineElement,\n//       Title,\n//       Tooltip,\n//       Legend\n//     );\n\n//   }, []);\n\n\n//   return (\n//     <div className=\"  w-full pt-20 px-4 pb-8\" >\n//       <h1 className=\"text-4xl font-bold mb-4 text-pink-600\">Corona Cases Chart</h1>\n//       <div className=\"border-2 border-red-100 w-11/12  m-auto 10 auto 10\" >\n\n//         {\n//           chartData.datasets ?\n//             <Line data={chartData} /> : <h1 className=\"text-pink-600 mb-4 font-bold text-2xl\">Loading...</h1>\n//         }\n\n\n\n\n//       </div>\n\n\n//       <h1 className=\"text-4xl font-bold mb-4 mt-4 text-blue-500\">Corona Cases World Map</h1>\n//       <div\n//         className=\"border-2 border-blue-500 w-11/12  m-auto 5 auto 5\"\n\n//       >\n//         <MapContainer\n\n//           className=\"m-auto w-full  border-blue-700\"\n//           bounds={[[-60, -180], [85, 180]]} zoom={2}\n//           center={[20, 40]}\n//           scrollWheelZoom={true}\n\n//         >\n\n//           <TileLayer\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//             attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n//           />\n\n\n\n\n//           <WorldMap countriesData={countriesData} />\n\n//         </MapContainer>\n\n\n\n\n//       </div>\n\n\n\n\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n// ... imports ...\n\n\nconst Dashboard = () => {\n    const [countriesData, setCountriesData] = useState([]);\n    const [chartData, setChartData] = useState({});\n  \n  \n  \n    useEffect(() => {\n      axios(\n        \"https://disease.sh/v3/covid-19/countries\"\n      )\n        .then((res) => {\n          const data = res.data\n          setCountriesData(data);\n        })\n  \n  \n    }, []);\n  \n    useEffect(() => {\n  \n  \n      axios.get(\n        \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\"\n      ).then((res) => {\n  \n        const data = res.data\n  \n        const newChartData = {\n          labels: Object.keys(data.cases),\n          datasets: [\n            {\n              label: \"Cases\",\n              data: Object.values(data.cases),\n              fill: false,\n              borderColor: \"#f50057\",\n              tension: 0.2,\n            },\n          ],\n        };\n  \n        setChartData(newChartData);\n      })\n  \n  \n      ChartJS.register(\n        CategoryScale,\n        LinearScale,\n        PointElement,\n        LineElement,\n        Title,\n        Tooltip,\n        Legend\n      );\n  \n    }, []);\n    return (\n    <div className=\"bg-gray-200 min-h-screen py-8\">\n      <div className=\"container mx-auto p-4\">\n        <h1 className=\"text-4xl font-bold mb-8 text-pink-600\">\n          Corona Cases Candlestick Chart\n        </h1>\n        <div className=\"bg-white rounded-lg shadow-lg p-4\">\n          {chartData ? (\n            <CandlestickChart data={chartData.datasets[0].data} />\n          ) : (\n            <h1 className=\"text-pink-600 mb-4 font-bold text-2xl\">Loading...</h1>\n          )}\n        </div>\n\n        {/* ... rest of your code ... */}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}